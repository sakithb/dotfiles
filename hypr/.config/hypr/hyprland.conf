$terminal = wezterm
$browser = zen-browser
$explorer = ranger
$menu_dmenu = tofi
$menu_drun = tofi-drun
$mod = SUPER

exec-once = wl-paste --type text --watch cliphist store
exec-once = wl-paste --type image --watch cliphist store
exec = sleep 1 && hyprctl hyprpaper reload ",$(find ~/Pictures/Wallpapers/ -type f | shuf -n 1)"

bind = $mod, Return, exec, uwsm app -- $terminal
bind = $mod, B, exec, uwsm app -- $browser
bind = $mod, Space, exec, uwsm app -- $($menu_drun)
bind = $mod, E, exec, uwsm app -- wezterm-launch $explorer
bind = $mod, Print, exec, grim ~/Pictures/Screenshots/screenshot_$(date +%s).png && notify-send "Screenshot saved"

bind = $mod_CTRL, Print, exec, grim -g "$(slurp)" ~/Pictures/Screenshots/screenshot_$(date +%s).png && notify-send "Screenshot saved"
bind = $mod_SHIFT, V, exec, cliphist list | expand -t 2 | $menu_dmenu | cliphist decode | wl-copy
bind = $mod_SHIFT, P, exec, uwsm app -- powermenu
bind = $mod_SHIFT, N, exec, uwsm app -- notifications
bind = $mod_SHIFT, C, exec, uwsm app -- calculator

bind = $mod, Q, killactive
bind = $mod, F, togglefloating
bind = $mod_ALT, F, fullscreen
bind = $mod, L, exec, loginctl lock-session
bind = $mod, P, pin
bind = $mod, TAB, cyclenext

bind = $mod, 1, workspace, 1
bind = $mod, 2, workspace, 2
bind = $mod, 3, workspace, 3
bind = $mod, 4, workspace, 4
bind = $mod, 5, workspace, 5
bind = $mod, 6, workspace, 6
bind = $mod, 7, workspace, 7
bind = $mod, 8, workspace, 8
bind = $mod, 9, workspace, 9
bind = $mod, 0, workspace, special

bind = $mod_SHIFT, 1, movetoworkspace, 1
bind = $mod_SHIFT, 2, movetoworkspace, 2
bind = $mod_SHIFT, 3, movetoworkspace, 3
bind = $mod_SHIFT, 4, movetoworkspace, 4
bind = $mod_SHIFT, 5, movetoworkspace, 5
bind = $mod_SHIFT, 6, movetoworkspace, 6
bind = $mod_SHIFT, 7, movetoworkspace, 7
bind = $mod_SHIFT, 8, movetoworkspace, 8
bind = $mod_SHIFT, 9, movetoworkspace, 9
bind = $mod_SHIFT, 0, movetoworkspace, special

bind = $mod_CTRL, 1, movetoworkspacesilent, 1
bind = $mod_CTRL, 2, movetoworkspacesilent, 2
bind = $mod_CTRL, 3, movetoworkspacesilent, 3
bind = $mod_CTRL, 4, movetoworkspacesilent, 4
bind = $mod_CTRL, 5, movetoworkspacesilent, 5
bind = $mod_CTRL, 6, movetoworkspacesilent, 6
bind = $mod_CTRL, 7, movetoworkspacesilent, 7
bind = $mod_CTRL, 8, movetoworkspacesilent, 8
bind = $mod_CTRL, 9, movetoworkspacesilent, 9
bind = $mod_CTRL, 0, movetoworkspacesilent, special

bind = $mod, H, movefocus, l
bind = $mod, J, movefocus, d
bind = $mod, K, movefocus, u
bind = $mod, L, movefocus, r

bind = $mod_SHIFT, H, moveactive, l
bind = $mod_SHIFT, J, moveactive, d
bind = $mod_SHIFT, K, moveactive, u
bind = $mod_SHIFT, L, moveactive, r

bind = $mod_ALT, H, resizeactive, l
bind = $mod_ALT, J, resizeactive, d
bind = $mod_ALT, K, resizeactive, u
bind = $mod_ALT, L, resizeactive, r

bind = , XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bind = , XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bind = , XF86AudioRaiseVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
bind = , XF86AudioPlay, exec, playerctl play-pause
bind = , XF86AudioNext, exec, playerctl next
bind = , XF86AudioPrev, exec, playerctl previous
bind = , XF86MonBrightnessUp, exec, brightnessctl set +5%
bind = , XF86MonBrightnessDown, exec, brightnessctl set 5%-
bind = , XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle

windowrulev2 = float,size 80% 75%,center, class:.*ranger.*
windowrulev2 = float,size 60% 50%,center, class:.*nmtui.*
windowrulev2 = float,size 60% 50%,center, class:.*pavucontrol.*

layerrule = blur,waybar
layerrule = blur,launcher

monitor = , preferred, auto, 1
animation = global, 1, 1, default

general {
    border_size = 1
    gaps_in = 5
    gaps_out = 5
    col.active_border = 0xffbbbbbb
    col.inactive_border = 0xff444444
}

input {
    accel_profile = flat
    scroll_method = 2fg

    touchpad {
        scroll_factor = 0.5
    }
}

gestures {
    workspace_swipe = true
    workspace_swipe_fingers = 4
    workspace_swipe_distance = 150
}

misc {
    disable_hyprland_logo = true
}

decoration {
    blur {
        passes = 2
    }
}
